name: ci

on:
  push:
    branches:
      - main
  workflow_run:
    workflows:
      - update
    types:
      - completed

jobs:
  build-nightly:
    name: build-nightly
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Install nix
        uses: cachix/install-nix-action@v13
        with:
          install_url: https://github.com/numtide/nix-unstable-installer/releases/latest/download/install
          extra_nix_config: |
            experimental-features = flakes nix-command
            access-tokens = github.com=${{ github.token }}

      - name: Set up cachix
        uses: cachix/cachix-action@v10
        with:
          name: nix-community
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}

      - name: Build with nix
        run: |
          pkgs=(.#{{minimal,default,complete,latest}.toolchain,rust-analyzer{,-vscode-extension}})
          nix build "${pkgs[@]}"
          nix build --override-input \
            nixpkgs github:nixos/nixpkgs/nixpkgs-unstable "${pkgs[@]}"

  build-stable-beta:
    name: build-stable-beta
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Install nix
        uses: cachix/install-nix-action@v13
        with:
          install_url: https://github.com/numtide/nix-unstable-installer/releases/latest/download/install
          extra_nix_config: experimental-features = flakes nix-command

      - name: Set up cachix
        uses: cachix/cachix-action@v10
        with:
          name: nix-community
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}

      - name: Build with nix
        run: |
          pkgs=(.#{stable,beta}.{minimal,default,complete}Toolchain)
          nix build "${pkgs[@]}"
          nix build --override-input \
            nixpkgs github:nixos/nixpkgs/nixpkgs-unstable "${pkgs[@]}"
